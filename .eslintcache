[{"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/index.js":"1","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/NavBar/index.js":"2","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/AboutSection/index.js":"3","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/ContactSection/index.js":"4","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/ProjectSection/index.js":"5","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/App/index.js":"6","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/ProjectCard/index.js":"7"},{"size":489,"mtime":1611205742258,"results":"8","hashOfConfig":"9"},{"size":1349,"mtime":1611808122769,"results":"10","hashOfConfig":"9"},{"size":2230,"mtime":1611807955252,"results":"11","hashOfConfig":"9"},{"size":1290,"mtime":1611784134380,"results":"12","hashOfConfig":"9"},{"size":1542,"mtime":1611801763302,"results":"13","hashOfConfig":"9"},{"size":472,"mtime":1611273930924,"results":"14","hashOfConfig":"9"},{"size":929,"mtime":1611806090811,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ougcsu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/index.js",[],["32","33"],"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/NavBar/index.js",[],"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/AboutSection/index.js",[],"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/ContactSection/index.js",[],"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/ProjectSection/index.js",["34"],"import React, { Component } from 'react'\nimport { Container, Row, Col, CardDeck } from 'react-bootstrap'\nimport ProjectCard from '../ProjectCard';\n\nconst range = (num) => [...Array(num).keys()]\n\n\nexport default class index extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            projects: null\n        }\n    }\n    async componentDidMount() {\n        try {\n            const result = await fetch('/data/projects.json')\n            const { projects } = await result.json()\n            this.setState({\n                projects\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    render() {\n        const { projects } = this.state\n        return (\n            <Container>\n                <Row className=\"justify-content-center mb-2\">\n                    <Col>\n                        <h1 id=\"projects\" className=\"text-center text-primary\">Projects</h1>\n                    </Col>\n                </Row>\n                <Row className=\"d-flex flex-wrap justify-content-center\">\n                    <CardDeck className=\"justify-content-center\">\n                        {\n                            projects ? projects.map((project, index) => (<ProjectCard key={index} project={project} />)) : 'Loading'\n                        }\n                    </CardDeck>\n                </Row>\n                <hr className=\"border-primary border-bottom\" />\n            </Container>\n        )\n    }\n}\n\n// {\n//     range(6).map((item) => (<ProjectCard key={item} />))\n// }","/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/App/index.js",[],"/Users/texas2010/Documents/programming/my-workspaces/texas2010.github.io/src/components/ProjectCard/index.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":7,"nodeType":"41","messageId":"42","endLine":5,"endColumn":12},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'range' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]